<h1>Report</h1>
<div class="controls controls-row">
  <div class="span2">
    <%= label "startdate", "Start Date" %>
    <%= text_field "startdate","",:value => 15.days.ago.at_midnight.to_date, :class => 'datepicker span2', :size => 10, :maxlength => 10 %> 
</div>

  <div class="span2">
    <%= label "enddate", "End Date" %>
    <%= text_field "enddate","",:value => 1.day.from_now.at_midnight.to_date, :class => 'datepicker span2', :size => 10, :maxlength => 10 %> 
  </div>
<div class="span2">
    <%= label "dateRange", "Date Range" %>
  <select id="dateRange" class="span2">
    <option value="custom">Custom</option>
    <option value="lastWeek" startdate="<%= 7.days.ago.beginning_of_week.to_date %>" enddate="<%= Date.today.beginning_of_week %>">Last Week</option>
    <option value="thisWeek" startdate="<%= Date.today.beginning_of_week %>" enddate="<%= Date.today.end_of_week %>">This Week</option>
    <option value="lastMonth" startdate="<%= 1.month.ago.beginning_of_month.to_date %>" enddate="<%= Date.today.beginning_of_month %>">Last Month</option>
    <option value="thisMonth" startdate="<%= Date.today.beginning_of_month %>" enddate="<%= Date.today.end_of_month %>">This Month</option>
    <option value="thisYear" startdate="<%= Date.today.beginning_of_year %>" enddate="<%= Date.today.end_of_year %>">This Year</option>
  </select>
</div>
  <div class="span2">
    <%= label :employee, "Filters:" %>
    <%= collection_select(:event, :employee_id, @employees, :id, :firstname,{:selected => "2", :prompt => "Select Employee" }, {:class => "span2"}) %>  
</div>
<div class="span3">
    <%= label :job, "." %>
    <%= collection_select(:event, :job_id, @jobs, :id, :name, {:selected => "2", :prompt => "Select Job"}) %>  
</div>
</div>
<table id="matrix" class="table">
  <tr>
    <th></th>
    <% @jobs.each do |job| %>
    <th class="job<%= job[:id] %>"><%= job[:name] %></th>
    <% end %>
    <th>Total</th>
  </tr>
  <% @employees.each do |employee| %>
  <tr id="employee<%= employee[:id] %>">
    <th>
      <%= employee[:firstname] %> <%= employee[:lastname] %>
    </th>
    <% @jobs.each do |job| %>
    <td class="job<%= job[:id] %>"></td>
    <% end %>
    <td class="total"></td>
  </tr>
  <% end %>
  <tr class="total">
    <th>Total</th>
        <% @jobs.each do |job| %>
    <td class="job<%= job[:id] %>"></td>
    <% end %>
    <td class="total"></td>
  </tr>
</table>



<h2>Watermill Format</h2>  
<div id="wperiods">

</div>

<table id="periods" class="table">
  <tr>
    <th>User</th>
    <th>Job</th>
    <th>In</th>
    <th>Out</th>
    <th>Length</th>
    <th class="span5">Log</th>

  </tr>

<% @periods.each do |period| %>
  <tr>
    <td><%= period[:employee].firstname %></td>
    <td><%= period[:job].name %></td>
    <td><%= period[:in] %></td>
    <td><%= period[:out] %></td>
    <td><%= '%.2f' % period[:length] if period[:length] != nil %></td>
    <td class="pre"><%= period[:log] %></td>

  </tr>

<% end %>
<tr class="totals"><td>Total:</td><td></td><td></td><td></td><td class="length"></td><td></td></tr>
</table>


<script type="text/javascript" charset="utf-8">
  $(document).ready(function() {


    $('#dateRange').change(function() {
      if ($('#dateRange :selected').attr('startdate')) {
        $('#startdate_').val($('#dateRange :selected').attr('startdate'))
        $('#enddate_').val($('#dateRange :selected').attr('enddate'))
      }

    });
    $('[id^=startdate],[id^=enddate]').change(function() {
      $('#dateRange').val('custom')
    });
    $('#event_employee_id, #event_job_id,#dateRange,[id^=startdate],[id^=enddate]').change(function() {
      calcTotals();
      watermillSummary();
    });


    calcTotals();
    watermillSummary();



  });

var dateOnly = function(ISOdate) {
    var date = new Date(ISOdate);
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0).valueOf();
};
var addHours = function(time, hours) {
    var dTime = new Date(time);
    return new Date(dTime.getTime() + hours*60*60*1000);
};
var roundedTime = function(datetime) {
    var rounded = new Date(Math.round(datetime.getTime()/(15*60000))*15*60000); // rounds to nearest :15
    return timeOnly(rounded);
}
var timeOnly = function(datetime) {
  return datetime.toTimeString().substr(0,5);
}
var makeOutputString = function(inTime,outTime,hoursFirst,hoursLast,hoursAM,hoursPM,log) {
  if (hoursPM == 0) {
    hoursAM -= hoursLast
    hoursPM = hoursLast
  }
  var printString = inTime.toDateString().substr(0,1) + "," + (inTime.getMonth() + 1) + "-" + inTime.getDate() + ",";
  printString += log + ","
  printString += roundedTime(inTime) + "-" + roundedTime(addHours(inTime,(hoursFirst + hoursAM)));
  if (hoursLast > 0) printString += "," + roundedTime(addHours(outTime, - hoursPM)) + "-" + roundedTime(outTime);
  return printString;
}

  var watermillSummary = function () {
  $.getJSON("report.json", function(json){
    var totals = {};

    var lastDay = outTime = new Date(0);
    var hoursLast = hoursAM = hoursPM = 0
    var log = ""
    $('#wperiods').empty();

    $.each(json, function(n) { //filter the json and add values in an array
      if(
        json[n].length && 
        json[n].in >= formatDate('startdate') && 
        json[n].out <= formatDate('enddate') && 
        (json[n].employee.id == $('#event_employee_id :selected').val() || $('#event_employee_id :selected').val() == '' ) && 
        (json[n].job.id == $('#event_job_id :selected').val() || $('#event_job_id :selected').val() == '' )
        ) {
        var employeeId = json[n].employee.id;
        var jobId = json[n].job.id;
        if(!totals[employeeId]) totals[employeeId] = {}  //initialize
        if(!totals[employeeId][jobId]) totals[employeeId][jobId] = 0 //initialize

        totals[employeeId][jobId] += json[n].length

//
        if (dateOnly(json[n].in) == dateOnly(lastDay)) {
          outTime = new Date(json[n].out);
          hoursLast = json[n].length;
          if (new Date(json[n].in).getHours() < 12 ) hoursAM += json[n].length;
          else hoursPM += json[n].length;
          if(json[n].log) log += json[n].log

        }
        else {
          if (lastDay > 0) {

            $('#wperiods').append($("<p>" + makeOutputString(inTime,outTime,hoursFirst,hoursLast,hoursAM,hoursPM,log) + "</p>"))
          }
          lastDay = new Date(json[n].in);
          inTime = new Date(json[n].in);
          outTime = new Date(json[n].out);
          hoursFirst = json[n].length;
          hoursLast = hoursAM = hoursPM = 0;
          if(json[n].log) log = json[n].log
          else log = ""
        }
        

      }

    })
    
    $('#wperiods').append($("<p>" + makeOutputString(inTime,outTime,hoursFirst,hoursLast,hoursAM,hoursPM,log) + "</p>"))


  });
}

</script>
